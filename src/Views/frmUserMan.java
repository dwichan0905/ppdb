/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lenovo
 */
public class frmUserMan extends Modules.mdlUtama {

    private String mode = "";
    private String uname = "";

    public void setTemp_uname(String temp_uname) {
        this.temp_uname = temp_uname;
    }

    public void setTemp_email(String temp_email) {
        this.temp_email = temp_email;
    }

    public String getTemp_uname() {
        return temp_uname;
    }

    public String getTemp_email() {
        return temp_email;
    }
    
    private String temp_uname = "";
    private String temp_email = "";
    private Modules.ConnectionBuilder cb = new Modules.ConnectionBuilder();
    private Modules.OutputSuara os = new Modules.OutputSuara();
    
    /**
     * Creates new form manajemen
     */
    public frmUserMan() {
        initComponents();
        this.txtUsername.setDocument(new JTextFieldLimit(12));
    }
    
    public void RefreshDialog(String filter) {
        try {
            this.uname = filter;
            DefaultTableModel mdl = new DefaultTableModel();
            mdl.addColumn("Username");
            mdl.addColumn("Nama Pengguna");
            ResultSet rs = cb.executeSelect("SELECT * FROM user WHERE username NOT IN (\"" + filter + "\") ORDER BY nama ASC");
            
            while(rs.next()) {
                Object[] obj = new Object[2];
                    obj[0] = rs.getString("username");
                    obj[1] = rs.getString("nama");
                    
                mdl.addRow(obj);
            }
            
            tblUser.setModel(mdl);
            tblUser.getColumn("Username").setPreferredWidth(100);
            tblUser.getColumn("Nama Pengguna").setPreferredWidth(300);
        } catch (SQLException ex) {
            Logger.getLogger(frmUserMan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField2 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnTambah = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnSimpan = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblUser = new javax.swing.JTable();
        txtNama = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTextField2.setText("jTextField2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("User Manager");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MANAJEMEN PENGGUNA");

        jLabel2.setText("Nama");

        jLabel3.setText("E-Mail");

        jLabel4.setText("Username");

        jLabel5.setText("Password");

        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnSimpan.setText("Simpan");
        btnSimpan.setEnabled(false);
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnKeluar.setText("Keluar");
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });

        tblUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUserMouseClicked(evt);
            }
        });
        tblUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblUserKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tblUser);

        txtNama.setEnabled(false);

        txtEmail.setEnabled(false);

        txtUsername.setEnabled(false);

        txtPassword.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtPassword.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnKeluar)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnTambah)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(btnSimpan)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnEdit)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnHapus))
                                .addComponent(txtNama)
                                .addComponent(txtEmail)
                                .addComponent(txtUsername)
                                .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTambah)
                    .addComponent(btnEdit)
                    .addComponent(btnHapus)
                    .addComponent(btnKeluar)
                    .addComponent(btnSimpan))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        // TODO add your handling code here:
        switch(btnKeluar.getText()) {
            case "Batal":
                this.mode = "";
                btnSimpan.setEnabled(false);
                btnTambah.setEnabled(true);
                btnEdit.setEnabled(true);
                btnHapus.setEnabled(true);
                btnKeluar.setText("Keluar");
                
                txtNama.setEnabled(false);
                txtEmail.setEnabled(false);
                txtUsername.setEnabled(false);
                txtPassword.setEnabled(false);
                txtNama.setText("");
                txtEmail.setText("");
                txtUsername.setText("");
                txtPassword.setText("");
                break;
            default:
                this.dispose();
                break;
        }
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        // TODO add your handling code here:
        this.mode = "add";
        btnSimpan.setEnabled(true);
        btnTambah.setEnabled(false);
        btnEdit.setEnabled(false);
        btnHapus.setEnabled(false);
        btnKeluar.setText("Batal");
        txtNama.setEnabled(true);
        txtEmail.setEnabled(true);
        txtUsername.setEnabled(true);
        txtPassword.setEnabled(true);
        txtNama.setText("");
        txtEmail.setText("");
        txtUsername.setText("");
        txtPassword.setText("");
        
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        if (tblUser.isRowSelected(tblUser.getSelectedRow())) {
            this.mode = "edit";
            btnSimpan.setEnabled(true);
            btnTambah.setEnabled(false);
            btnEdit.setEnabled(false);
            btnHapus.setEnabled(false);
            btnKeluar.setText("Batal");
            txtNama.setEnabled(true);
            txtEmail.setEnabled(true);
            txtUsername.setEnabled(true);
            txtPassword.setEnabled(false);
        } else {
            os.error();
            JOptionPane.showMessageDialog(this, "Pilih dulu pengguna mana yang akan diedit!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        try {
            // TODO add your handling code here:
            switch (mode) {
                case "add":
                    ResultSet rs = cb.executeSelect("SELECT username FROM user WHERE username = \"" + txtUsername.getText() + "\"");
                    ResultSet rsEmail = cb.executeSelect("SELECT email FROM user WHERE email = \"" + txtEmail.getText() + "\"");
                    
                    if (txtUsername.getText().equals("")) {
                        os.error();
                        JOptionPane.showMessageDialog(this, "Username wajib diisi!", "Error", JOptionPane.ERROR_MESSAGE);
                    } else if (txtNama.getText().equals("")) {
                        os.error();
                        JOptionPane.showMessageDialog(this, "Nama wajib diisi!", "Error", JOptionPane.ERROR_MESSAGE);
                    } else if (String.valueOf(txtPassword.getPassword()).equals("")) {
                        os.error();
                        JOptionPane.showMessageDialog(this, "Password wajib diisi!", "Error", JOptionPane.ERROR_MESSAGE);
                    } else if (rs.next()) {
                        os.error();
                        JOptionPane.showMessageDialog(this, "Username tersebut sudah ada!", "Error", JOptionPane.ERROR_MESSAGE);
                    } else if (rsEmail.next()) {
                        os.error();
                        JOptionPane.showMessageDialog(this, "Email tersebut sudah ada yang memakai!", "Error", JOptionPane.ERROR_MESSAGE);
                    } else {
                        this.mode = "";
                        
                        cb.executeUpdate("INSERT INTO user VALUES(\"" + txtNama.getText() + "\", \"" + txtUsername.getText() + "\", \"" + String.valueOf(txtPassword.getPassword()) + "\", \"" + txtEmail.getText() + "\")");
                        RefreshDialog(uname);
                        
                        os.input_ok();
                        JOptionPane.showMessageDialog(this, "Berhasil disimpan!", "OK", JOptionPane.INFORMATION_MESSAGE);
                        btnSimpan.setEnabled(false);
                        btnTambah.setEnabled(true);
                        btnEdit.setEnabled(true);
                        btnHapus.setEnabled(true);
                        btnKeluar.setText("Keluar");
                        txtNama.setEnabled(false);
                        txtEmail.setEnabled(false);
                        txtUsername.setEnabled(false);
                        txtPassword.setEnabled(false);
                        txtNama.setText("");
                        txtEmail.setText("");
                        txtUsername.setText("");
                        txtPassword.setText("");
                    }
                    break;
                case "edit":
                    ResultSet rs2 = cb.executeSelect("SELECT username FROM user WHERE username = \"" + txtUsername.getText() + "\"");
                    ResultSet rsEmail2 = cb.executeSelect("SELECT email FROM user WHERE email = \"" + txtEmail.getText() + "\"");
                    
                    if (txtUsername.getText().equals("")) {
                        os.error();
                        JOptionPane.showMessageDialog(this, "Username wajib diisi!", "Error", JOptionPane.ERROR_MESSAGE);
                    } else if (txtNama.getText().equals("")) {
                        os.error();
                        JOptionPane.showMessageDialog(this, "Nama wajib diisi!", "Error", JOptionPane.ERROR_MESSAGE);
                    } else if (rs2.next() && !txtUsername.getText().equals(temp_uname)) {
                        os.error();
                        JOptionPane.showMessageDialog(this, "Username tersebut sudah ada!", "Error", JOptionPane.ERROR_MESSAGE);
                    } else if (rsEmail2.next() && !txtEmail.getText().equals(temp_email)) {
                        os.error();
                        JOptionPane.showMessageDialog(this, "Email tersebut sudah ada yang memakai!", "Error", JOptionPane.ERROR_MESSAGE);
                    } else {
                        this.mode = "";
                        
                        cb.executeUpdate("UPDATE user SET nama=\"" + txtNama.getText() + "\", username=\"" + txtUsername.getText() + "\", email=\"" + txtEmail.getText() + "\" WHERE username=\"" + this.getTemp_uname() + "\"");
                        RefreshDialog(uname);
                        
                        os.input_ok();
                        JOptionPane.showMessageDialog(this, "Berhasil disimpan!", "OK", JOptionPane.INFORMATION_MESSAGE);
                        this.setTemp_email("");
                        this.setTemp_uname("");
                        btnSimpan.setEnabled(false);
                        btnTambah.setEnabled(true);
                        btnEdit.setEnabled(true);
                        btnHapus.setEnabled(true);
                        btnKeluar.setText("Keluar");
                        txtNama.setEnabled(false);
                        txtEmail.setEnabled(false);
                        txtUsername.setEnabled(false);
                        txtPassword.setEnabled(false);
                        txtNama.setText("");
                        txtEmail.setText("");
                        txtUsername.setText("");
                        txtPassword.setText("");
                    }
                    break;
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmUserMan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void getData(String username) {
        try {
            ResultSet rs = cb.executeSelect("SELECT * FROM user WHERE username = \"" + username + "\"");
            if (rs.next()) {
                txtNama.setText(rs.getString("nama"));
                txtEmail.setText(rs.getString("email"));
                txtUsername.setText(rs.getString("username"));
                this.setTemp_email(rs.getString("email"));
                this.setTemp_uname(rs.getString("username"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmUserMan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void tblUserKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblUserKeyReleased
        // TODO add your handling code here:
        this.getData(String.valueOf(tblUser.getValueAt(tblUser.getSelectedRow(), 0)));
    }//GEN-LAST:event_tblUserKeyReleased

    private void tblUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUserMouseClicked
        // TODO add your handling code here:
        this.getData(String.valueOf(tblUser.getValueAt(tblUser.getSelectedRow(), 0)));
    }//GEN-LAST:event_tblUserMouseClicked

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        if (tblUser.isRowSelected(tblUser.getSelectedRow())) {
            if (JOptionPane.showConfirmDialog(this, "Yakin ingin menghapus pengguna " + String.valueOf(tblUser.getValueAt(tblUser.getSelectedRow(), 1)) + "?", "Confirm Remove User", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
                try {
                    String temp_k = String.valueOf(tblUser.getValueAt(tblUser.getSelectedRow(), 1));
                    cb.executeUpdate("DELETE FROM user WHERE username = \"" + String.valueOf(tblUser.getValueAt(tblUser.getSelectedRow(), 0)) + "\"");
                    this.RefreshDialog(uname);
                    txtNama.setText("");
                    txtEmail.setText("");
                    txtUsername.setText("");
                    txtPassword.setText("");
                    os.input_ok();
                    JOptionPane.showMessageDialog(this, temp_k + " berhasil dihapus!", "Complete", JOptionPane.INFORMATION_MESSAGE);
                } catch (SQLException ex) {
                    Logger.getLogger(frmUserMan.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            os.error();
            JOptionPane.showMessageDialog(this, "Pilih dulu pengguna mana yang akan dihapus!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmUserMan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmUserMan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmUserMan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmUserMan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmUserMan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnTambah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTable tblUser;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNama;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
